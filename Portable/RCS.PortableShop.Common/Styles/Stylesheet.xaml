<ResourceDictionary
    x:Class="RCS.PortableShop.Common.Styles.Stylesheet"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls="clr-namespace:RCS.PortableShop.Common.Controls;assembly=RCS.PortableShop.Common"
    >
    
    <!--Note that currently no form of nested or multiple merging exist. https://forums.xamarin.com/discussion/86308/multiple-merged-dictionaries?-->
    <!--TODO split off ResourceDictionary when possible.-->

    <!--#region Values -->

    <Thickness x:Key="ViewPadding">5</Thickness>
    <Thickness x:Key="ControlLeftMargin">5,0,0,0</Thickness>
    <Thickness x:Key="ControlRightMargin">0,0,5,0</Thickness>
    <Thickness x:Key="InfoLeftMargin">10,0,0,0</Thickness>

    <LayoutOptions x:Key="LineVerticalOptions">Center</LayoutOptions>

    <!--#endregion-->

    <!--#region Colours -->

    <!--Note that only a limited number of Color names is supported, currently different from the documentation.-->
    <Color x:Key="MessageColour">#00008B</Color> <!--DarkBlue-->
    <Color x:Key="AssertColour">Green</Color>
    <Color x:Key="WarningColour">Orange</Color>
    <Color x:Key="ErrorColour">Red</Color>
    <Color x:Key="ResultsBackgroundColour">White</Color>

    <Color x:Key="InvalidBackgroundColour">#FFB0B0</Color>

    <!--TODO This part would be candidate to split of a specific dictionary.-->
    <Color x:Key="ProductsLevel0Colour">#58ACFA</Color>
    <Color x:Key="ProductsLevel1Colour">#A9D0F5</Color>
    <Color x:Key="CartLevel0Colour">#F4FA58</Color>
    <Color x:Key="CartLevel1Colour">#F2F5A9</Color>
    <Color x:Key="LabelTextColour">#2F4F4F</Color> <!--DarkSlateGray-->
    <Color x:Key="ValueTextColour">#00008B</Color> <!--DarkBlue-->

    <!--#endregion-->

    <!--#region ListViews -->

    <Style TargetType="ListView">
        <!--Note that setting HasUnevenRows seems the only way to let rows (somewhat) adapt to contents, instead of having to set some fixed RowHeight.-->
        <Setter Property="HasUnevenRows" Value="True"/>
    </Style>

    <!--#endregion-->

    <!--#region Grids -->

    <Style x:Key="ListItemStyle" TargetType="Grid">
        <Setter Property="Margin" Value="2,2,2,0"/>
        <Setter Property="Padding" Value="3"/>
    </Style>

    <!--#endregion-->

    <!--#region Labels -->

    <!--Base needed to inherit.-->
    <Style x:Key="LabelStyle" TargetType="Label">
        <Setter Property="VerticalOptions" Value="{StaticResource LineVerticalOptions}"/>
        <Setter Property="FontSize" Value="Small"/>
        <Setter Property="TextColor" Value="{StaticResource LabelTextColour}"/>
    </Style>

    <!--Generic.-->
    <Style TargetType="Label" BasedOn="{StaticResource LabelStyle}"/>

    <Style x:Key="LabelLabelStyle" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="HorizontalOptions" Value="End"/>
    </Style>

    <Style x:Key="ValueLabelStyle" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="Margin" Value="{StaticResource InfoLeftMargin}"/>
        <Setter Property="TextColor" Value="{StaticResource ValueTextColour}"/>
    </Style>

    <Style x:Key="EmphasisLabelStyle" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="FontAttributes" Value="Bold"/>
    </Style>

    <Style x:Key="ValueEmphasisLabelStyle" TargetType="Label" BasedOn="{StaticResource ValueLabelStyle}">
        <Setter Property="FontAttributes" Value="Bold"/>
    </Style>

    <Style x:Key="EmphasisMediumLabelStyle" TargetType="Label" BasedOn="{StaticResource EmphasisLabelStyle}">
        <Setter Property="FontSize" Value="Medium"/>
    </Style>

    <Style x:Key="ValueEmphasisMediumLabelStyle" TargetType="Label" BasedOn="{StaticResource ValueEmphasisLabelStyle}">
        <Setter Property="FontSize" Value="Medium"/>
    </Style>

    <Style x:Key="EmphasisLargeLabelStyle" TargetType="Label" BasedOn="{StaticResource EmphasisLabelStyle}">
        <Setter Property="FontSize" Value="Large"/>
    </Style>

    <Style x:Key="ValueEmphasisLargeLabelStyle" TargetType="Label" BasedOn="{StaticResource ValueEmphasisLabelStyle}">
        <Setter Property="FontSize" Value="Large"/>
    </Style>

    <Style x:Key="MessageLabelStyle" TargetType="Label" BasedOn="{StaticResource EmphasisMediumLabelStyle}">
        <Setter Property="TextColor" Value="{StaticResource MessageColour}"/>
        <Setter Property="VerticalOptions" Value="FillAndExpand"/>
        <Setter Property="HorizontalOptions" Value="FillAndExpand"/>
    </Style>

    <!--#endregion-->

    <!--#region Entries -->

    <Style TargetType="Entry">
        <Setter Property="VerticalOptions" Value="{StaticResource LineVerticalOptions}"/>
    </Style>

    <Style x:Key="ValueEmphasisEntryStyle" TargetType="Entry">
        <Setter Property="TextColor" Value="{StaticResource ValueTextColour}"/>
        <Setter Property="FontAttributes" Value="Bold"/>
    </Style>

    <Style x:Key="InvalidEntryStyle" TargetType="Entry">
        <Setter Property="BackgroundColor" Value="{StaticResource InvalidBackgroundColour}"/>
    </Style>

    <!--#endregion-->

    <!--#region Pickers -->

    <Style TargetType="Picker">
        <Setter Property="VerticalOptions" Value="{StaticResource LineVerticalOptions}"/>
        <Setter Property="Margin" Value="{StaticResource ControlRightMargin}"/>
    </Style>
    
    <!--#endregion-->

    <!--#region Buttons -->

    <!--Note FontSize does not do anything. -->
    <!--Note FontAttributes does not work.-->
    <Style TargetType="Button">
        <Setter Property="VerticalOptions" Value="{StaticResource LineVerticalOptions}"/>
        <Setter Property="Margin" Value="{StaticResource ControlRightMargin}"/>

        <!-- Note on UWP the border is not visible when disabled.-->
        <Setter Property="BorderWidth" Value="1"/>
        <Setter Property="BorderColor" Value="Black"/>

        <Setter Property="TextColor" Value="{StaticResource LabelTextColour}"/>
    </Style>

    <Style x:Key="CancelButtonStyle" TargetType="Button">
        <!--Attempts to remove border, not effective.-->
        <!--
        <Setter Property="BorderWidth" Value="0"/>
        <Setter Property="BorderColor" Value="Transparent"/>
        -->
        <Setter Property="BackgroundColor" Value="Transparent"/>
        <Setter Property="WidthRequest" Value="30"/>
    </Style>

    <Style x:Key="CartButtonStyle" TargetType="Button" >
        <!--Reduce size, particularly for Android.-->
        <Setter Property="Scale" Value="0.75"/>
        <!--For unclear reasons 2 settings below were needed to solve asymmmetric buttons.-->
        <Setter Property="ContentLayout" Value="Right,0"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

<!--TODO This part would be candidate to split off to a specific dictionary.-->
    <Style x:Key="CartPlusButtonStyle" TargetType="Button" BasedOn="{StaticResource CartButtonStyle}">
        <Setter Property="BackgroundColor" Value="{StaticResource CartLevel1Colour}"/>
    </Style>

    <Style x:Key="CartTrashButtonStyle" TargetType="Button" BasedOn="{StaticResource CartButtonStyle}">
        <Setter Property="BackgroundColor" Value="{StaticResource WarningColour}"/>
    </Style>

    <!--#endregion-->

    <!--#region Custom Controls -->

    <Style TargetType="controls:ClearableEntry">
        <Setter Property="Margin" Value="{StaticResource ControlRightMargin}"/>
    </Style>

    <Style TargetType="controls:ContentButton">
        <Setter Property="VerticalOptions" Value="{StaticResource LineVerticalOptions}"/>
    </Style>

    <!--#endregion-->
    
</ResourceDictionary>