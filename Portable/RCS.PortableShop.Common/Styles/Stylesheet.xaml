<ResourceDictionary
    x:Class="RCS.PortableShop.Common.Styles.Stylesheet"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:controls="clr-namespace:RCS.PortableShop.Common.Controls;assembly=RCS.PortableShop.Common"
    xmlns:numericUpDown="clr-namespace:Syncfusion.SfNumericUpDown.XForms;assembly=Syncfusion.SfNumericUpDown.XForms"
    >
    <!--Note that currently no form of nested or multiple merging exist. https://forums.xamarin.com/discussion/86308/multiple-merged-dictionaries?-->
    <!--TODO split off ResourceDictionary when possible.-->

    <!--Values ======================================== -->

    <Thickness x:Key="ViewPadding">5</Thickness>

    <LayoutOptions x:Key="LineVerticalOptions">Center</LayoutOptions>

    <!--Colours ======================================== -->

    <!--Note that only a limited number of Color names is supported, currently different from the documentation.-->
    <Color x:Key="MessageColour">#00008B</Color> <!--DarkBlue-->
    <Color x:Key="AssertColour">Green</Color>
    <Color x:Key="WarningColour">Orange</Color>
    <Color x:Key="ErrorColour">Red</Color>
    <Color x:Key="ResultsBackgroundColour">White</Color>

    <Color x:Key="InvalidBackgroundColour">#FFB0B0</Color>

    <!--TODO This part would be candidate to split of a specific dictionary.-->
    <Color x:Key="ProductsLevel0Colour">#58ACFA</Color>
    <Color x:Key="ProductsLevel1Colour">#A9D0F5</Color>
    <Color x:Key="CartLevel0Colour">#F4FA58</Color>
    <Color x:Key="CartLevel1Colour">#F2F5A9</Color>
    <Color x:Key="LabelTextColour">#2F4F4F</Color> <!--DarkSlateGray-->
    <Color x:Key="ValueTextColour">#00008B</Color> <!--DarkBlue-->

    <!--ListViews ======================================== -->

    <Style TargetType="ListView">
        <!--Note that setting HasUnevenRows seems the only way to let rows (somewhat) adapt to contents, instead of having to set some fixed RowHeight.-->
        <Setter Property="HasUnevenRows" Value="True"/>
    </Style>

    <!--Grids ======================================== -->
 
    <Style x:Key="ListItemStyle" TargetType="Grid">
        <Setter Property="Margin" Value="2,2,2,0"/>
        <Setter Property="Padding" Value="3"/>
    </Style>

    <!--Labels ======================================== -->

    <!--Base needed to inherit.-->
    <Style x:Key="LabelStyle" TargetType="Label">
        <Setter Property="VerticalOptions" Value="{StaticResource LineVerticalOptions}"/>
        <Setter Property="FontSize" Value="Small"/>
        <Setter Property="TextColor" Value="{StaticResource LabelTextColour}"/>
    </Style>

    <!--Generic.-->
    <Style TargetType="Label" BasedOn="{StaticResource LabelStyle}"/>

    <Style x:Key="LabelLabelStyle" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="HorizontalOptions" Value="End"/>
    </Style>

    <Style x:Key="ValueLabelStyle" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="TextColor" Value="{StaticResource ValueTextColour}"/>
    </Style>

    <Style x:Key="EmphasisLabelStyle" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="FontAttributes" Value="Bold"/>
    </Style>

    <Style x:Key="ValueEmphasisLabelStyle" TargetType="Label" BasedOn="{StaticResource EmphasisLabelStyle}">
        <Setter Property="TextColor" Value="{StaticResource ValueTextColour}"/>
    </Style>

    <Style x:Key="EmphasisMediumLabelStyle" TargetType="Label" BasedOn="{StaticResource EmphasisLabelStyle}">
        <Setter Property="FontSize" Value="Medium"/>
    </Style>

    <Style x:Key="ValueEmphasisMediumLabelStyle" TargetType="Label" BasedOn="{StaticResource EmphasisMediumLabelStyle}">
        <Setter Property="TextColor" Value="{StaticResource ValueTextColour}"/>
    </Style>

    <Style x:Key="EmphasisLargeLabelStyle" TargetType="Label" BasedOn="{StaticResource EmphasisLabelStyle}">
        <Setter Property="FontSize" Value="Large"/>
    </Style>

    <Style x:Key="ValueEmphasisLargeLabelStyle" TargetType="Label" BasedOn="{StaticResource EmphasisLargeLabelStyle}">
        <Setter Property="TextColor" Value="{StaticResource ValueTextColour}"/>
    </Style>

    <Style x:Key="MessageLabelStyle" TargetType="Label" BasedOn="{StaticResource EmphasisMediumLabelStyle}">
        <Setter Property="TextColor" Value="{StaticResource MessageColour}"/>
        <Setter Property="VerticalOptions" Value="FillAndExpand"/>
        <Setter Property="HorizontalOptions" Value="FillAndExpand"/>
    </Style>

    <!--Entries ======================================== -->

    <Style TargetType="Entry">
        <Setter Property="VerticalOptions" Value="{StaticResource LineVerticalOptions}"/>
    </Style>

    <!--Buttons ======================================== -->

    <!--Note that HeightRequest usually fucks up the Button, while FontSize does not do anything. -->
    <!--Note that FontAttributes does not work.-->
    <Style TargetType="Button">
        <Setter Property="VerticalOptions" Value="{StaticResource LineVerticalOptions}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="TextColor" Value="{StaticResource LabelTextColour}"/>
    </Style>

    <Style x:Key="CancelButtonStyle" TargetType="Button">
        <!--Attempts to remove border, not effective.-->
        <!--
        <Setter Property="BorderWidth" Value="0"/>
        <Setter Property="BorderColor" Value="Transparent"/>
        -->
        <Setter Property="BackgroundColor" Value="Transparent"/>
        <Setter Property="WidthRequest" Value="30"/>
    </Style>

    <!--TODO This part would be candidate to split of a specific dictionary.-->
    <Style x:Key="CartButtonStyle" TargetType="Button">
        <Setter Property="BackgroundColor" Value="{StaticResource CartLevel1Colour}"/>
    </Style>

    <!--Custom Controls ======================================== -->
    
    <Style TargetType="controls:ContentButton">
        <Setter Property="VerticalOptions" Value="{StaticResource LineVerticalOptions}"/>
    </Style>

    <!--NumericUpDowns ======================================== -->

    <!--
    Documentation:
    https://help.syncfusion.com/xamarin/sfnumericupdown/overview
    
    Note this need HorizontalOptions to prevent taking all width. 
    It is hard to reduce its size, because of its Buttons to start with. 
    WidthRequest needs to be considerable large to preserve the text area. 
    HeightRequest only crops it.
    Related:
    https://www.syncfusion.com/forums/128080/can-the-size-of-the-numericupdown-component-be-made-smaller
    -->
    <Style TargetType="numericUpDown:SfNumericUpDown">
        <Setter Property="VerticalOptions" Value="{StaticResource LineVerticalOptions}"/>
        <Setter Property="HorizontalOptions" Value="Start"/>
        <Setter Property="WidthRequest" Value="130"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontAttribute" Value="Bold"/>
        <Setter Property="TextColor" Value="{StaticResource ValueTextColour}"/>
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="MaximumDecimalDigits" Value="0"/>
    </Style>
</ResourceDictionary>