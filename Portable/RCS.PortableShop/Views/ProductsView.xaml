<?xml version="1.0" encoding="UTF-8"?>

<BaseClasses:ImplicitModelView
    x:Class="RCS.PortableShop.Views.ProductsView"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:BaseClasses="clr-namespace:RCS.PortableShop.Common.Views;assembly=RCS.PortableShop.Common"
    xmlns:Views="clr-namespace:RCS.PortableShop.Views;assembly=RCS.PortableShop"
    xmlns:ViewModels="clr-namespace:RCS.PortableShop.ViewModels;assembly=RCS.PortableShop"
    xmlns:Behaviors="clr-namespace:RCS.PortableShop.Common.Behaviors;assembly=RCS.PortableShop.Common"
    xmlns:Controls="clr-namespace:RCS.PortableShop.Common.Controls;assembly=RCS.PortableShop.Common"
    xmlns:Extensions="clr-namespace:RCS.PortableShop.Common.Extensions;assembly=RCS.PortableShop.Common"
    xmlns:Converters="clr-namespace:RCS.PortableShop.Common.Converters;assembly=RCS.PortableShop.Common"
    xmlns:Localization="clr-namespace:RCS.PortableShop.Localization;assembly=RCS.PortableShop"
    BackgroundColor="{DynamicResource ProductsLevel0Colour}"
    Padding="{DynamicResource ViewPadding}"
    >

    <BaseClasses:View.ViewModel>
        <ViewModels:ProductsViewModel/>
    </BaseClasses:View.ViewModel>

    <BaseClasses:View.Resources>
        <ResourceDictionary>
            <!--<Converters:CategoriesFormatter x:Key="CategoriesFormatter"/>-->
            <!--<Converters:SizeFormatter x:Key="SizeFormatter"/>-->
            <Converters:ByteArrayToImageSourceConverter x:Key="ByteArrayToImageSourceConverter"/>
            <Converters:HasValueTester x:Key="HasValueTester"/>
            <Converters:BooleanInverter x:Key="BooleanInverter"/>
            <Converters:HasValueMultiTester x:Key="HasValueMultiTester"/>
        </ResourceDictionary>
    </BaseClasses:View.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackLayout Grid.Row="0">
            <!--Note this Orientation may be changed depending on screen orientation. Assume Vertical.-->
            <StackLayout Grid.Row="0" x:Name="actionBlock" Orientation="Vertical" VerticalOptions="Start" HorizontalOptions="Start">
                <StackLayout Orientation="Horizontal">
                    <Controls:BindablePicker Title="{Localization:Translate MasterFilter}" ItemsSource="{Binding MasterFilterItems, Mode=TwoWay}" SelectedItem="{Binding MasterFilterValue, Mode=TwoWay}" IsEnabled="{Binding MasterFilterItems, Converter={StaticResource HasValueTester}}" BackgroundColor="{DynamicResource ProductsLevel1Colour}"/>
                    <Controls:BindablePicker Title="{Localization:Translate DetailFilter}" ItemsSource="{Binding DetailFilterItems, Mode=TwoWay}" SelectedItem="{Binding DetailFilterValue, Mode=TwoWay}" IsEnabled="{Binding DetailFilterItems, Converter={StaticResource HasValueTester}}" BackgroundColor="{DynamicResource ProductsLevel1Colour}"/>
                    <Controls:ClearableEntry Placeholder="{Localization:Translate TextFilter}" Text="{Binding TextFilterValue, Mode=TwoWay}" BackgroundColor="{DynamicResource ProductsLevel1Colour}" WidthRequest="130">
                        <Controls:ClearableEntry.EntryBehaviors>
                            <!--TODO Currently parameter passing does not work and is hard coded. See comments elsewhere.-->
                            <!--Expression="{Binding ValidTextFilterExpression}"-->
                            <!--InvalidBackgroundColour="{DynamicResource InvalidBackgroundColour}"-->
                            <Behaviors:EntryRegexValidationBehavior x:Name="TextFilterValidator" Expression="\w{3}" InvalidBackgroundColour="#FFB0B0"/>
                        </Controls:ClearableEntry.EntryBehaviors>
                    </Controls:ClearableEntry>
                </StackLayout>

                <!--Put at Start, as changes in orientation did not work out correctly on the last Label.-->
                <StackLayout Orientation="Horizontal" HorizontalOptions="Start">
                    <Grid>
                        <!--TODO Currently this control does not appear on screen no matter what or where. It may be a bug in Xamarin. That has to be solved first.-->
                        <!--TODO Experiment what arrangement is best with regards to visibility and so on.-->
                        <!--TODO Possibly use it elsewhere too.-->
                        <ActivityIndicator Color="Black" IsVisible="{Binding Awaiting}" IsRunning="{Binding Awaiting}"/>

                        <!--IsDefault="True"-->
                        <Button Text="{Localization:Translate Filter}" Command="{Binding FilterCommand}" IsVisible="{Binding Awaiting, Converter={StaticResource BooleanInverter}}" BackgroundColor="{DynamicResource ProductsLevel1Colour}">
                            <!--Note this prevents unfiltered queries.-->
                            <!--TODO Combine with validation.-->
                            <Button.IsEnabled>
                                <Extensions:MultiBinding Converter="{StaticResource HasValueMultiTester}">
                                    <Binding Path="MasterFilterValue"/>
                                    <Binding Path="DetailFilterValue"/>
                                    <Binding Path="IsValid" Source="{x:Reference TextFilterValidator}"/>
                                </Extensions:MultiBinding>
                            </Button.IsEnabled>
                        </Button>
                    </Grid>

                    <Label Text="{Binding ItemsCount}" Style="{DynamicResource ValueEmphasisMediumLabelStyle}"/>

                    <Label Text="{Localization:Translate Products}" Style="{DynamicResource EmphasisMediumLabelStyle}"/>
                </StackLayout>
            </StackLayout>
        </StackLayout>

        <!--TODO It might be interesting to make all this Horizontal.-->
        <!--TODO Currently scrolling does not work here.-->
        <ScrollView Grid.Row="1">
            <ListView x:Name="productsItemsControl" ItemsSource="{Binding Items}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <Controls:ContentButton Command="{Binding BindingContext.DetailsCommand, Source={x:Reference productsItemsControl}}" CommandParameter="{Binding}">
                                <Controls:ContentButton.Content>
                                    <Grid Style="{DynamicResource ListItemStyle}" BackgroundColor="{DynamicResource ProductsLevel1Colour}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <StackLayout Grid.Column="0">
                                            <Image Source="{Binding ThumbNailPhoto, Converter={StaticResource ByteArrayToImageSourceConverter}}" VerticalOptions="Start" HorizontalOptions="Start" WidthRequest="100" HeightRequest="100" />
                                            <Button Text="{Localization:Translate IncreaseProduct}" Command="{Binding BindingContext.CartCommand, Source={x:Reference productsItemsControl}}" CommandParameter="{Binding}" Style="{DynamicResource CartButtonStyle}"/>
                                        </StackLayout>

                                        <StackLayout Grid.Column="1">
                                            <StackLayout Orientation="Horizontal">
                                                <Label Text="{Binding ProductCategory}" Style="{DynamicResource ValueLabelStyle}"/>
                                                <Label Text="/" Style="{DynamicResource ValueLabelStyle}"/>
                                                <Label Text="{Binding ProductSubcategory}" Style="{DynamicResource ValueLabelStyle}"/>
                                            </StackLayout>

                                            <Label Text="{Binding Name}" Style="{DynamicResource ValueEmphasisMediumLabelStyle}"/>

                                            <Label Text="{Binding ListPrice, StringFormat=\{0:C2\}}" Style="{DynamicResource ValueEmphasisLabelStyle}"/>

                                            <StackLayout Orientation="Horizontal">
                                                <Label Text="{Binding Size}" Style="{DynamicResource ValueLabelStyle}"/>
                                                <Label Text="{Binding SizeUnitMeasureCode}" Style="{DynamicResource ValueLabelStyle}"/>
                                            </StackLayout>

                                            <Label Text="{Binding Color}" Style="{DynamicResource ValueLabelStyle}"/>
                                        </StackLayout>
                                    </Grid>
                                </Controls:ContentButton.Content>
                            </Controls:ContentButton>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </ScrollView>
    </Grid>
</BaseClasses:ImplicitModelView>
