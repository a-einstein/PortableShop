<?xml version="1.0" encoding="UTF-8"?>

<baseClasses:View
    x:Class="RCS.PortableShop.Views.ProductsView"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:community="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:resx="clr-namespace:RCS.PortableShop.Resources;assembly=RCS.PortableShop.Resources"
    xmlns:behaviors="clr-namespace:RCS.PortableShop.Common.Behaviors;assembly=RCS.PortableShop.Common"
    xmlns:controls="clr-namespace:RCS.PortableShop.Common.Controls;assembly=RCS.PortableShop.Common"
    xmlns:converters="clr-namespace:RCS.PortableShop.Common.Converters;assembly=RCS.PortableShop.Common"
    xmlns:baseClasses="clr-namespace:RCS.PortableShop.Common.Views;assembly=RCS.PortableShop.Common"
    xmlns:viewModels="clr-namespace:RCS.PortableShop.ViewModels"
    xmlns:views="clr-namespace:RCS.PortableShop.Views"
    mc:Ignorable="d"
    BackgroundColor="{StaticResource ProductsLevel0Colour}"
    Padding="{StaticResource ViewPadding}"
    >
    <!--
     d:BindingContext="{d:DesignInstance Type=viewModels:ProductsViewModel}"
    -->

    <baseClasses:View.Resources>
        <ResourceDictionary>
            <!--TODO Apply/improve/remove? -->
            <!--<converters:CategoriesFormatter x:Key="CategoriesFormatter"/>-->
            <!--<converters:SizeFormatter x:Key="SizeFormatter"/>-->
            <community:ByteArrayToImageSourceConverter x:Key="ByteArrayToImageSourceConverter"/>
            <converters:HasValueTester x:Key="HasValueTester"/>
            <converters:HasValueMultiTester x:Key="HasValueMultiTester"/>
        </ResourceDictionary>
    </baseClasses:View.Resources>

    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackLayout Grid.Row="0">
                <!--Note this Orientation may be changed depending on screen orientation. Assume Vertical.-->
                <!--Note that because of the Title of Picker on UWP all elements have VerticalOptions="End"-->
                <StackLayout x:Name="actionBlock" Orientation="Vertical" HorizontalOptions="Start">
                    <StackLayout Orientation="Horizontal">
                        <!--Note that Title of Picker: for Android is displayed as placeholder inside, for UWP as separate label above. Therefor no separate label and the VerticalOptions.-->

                        <!--TODO Replace the Translate/Static everywhere. The static is just a way to get a text, but is not localizing. Maybe use Microsoft.Extensions.Localization. Perhaps in conjunction with already present code.-->
                        <!--<Picker Title="{community:Translate MasterFilter}" ItemsSource="{Binding MasterFilterItems, Mode=TwoWay}" SelectedItem="{Binding MasterFilterValue, Mode=TwoWay}" IsEnabled="{Binding MasterFilterItems, Converter={StaticResource HasValueTester}}" BackgroundColor="{StaticResource ProductsLevel1Colour}" VerticalOptions="End"/>-->
                        <Picker Title="{x:Static resx:Labels.MasterFilter}" ItemsSource="{Binding MasterFilterItems, Mode=TwoWay}" SelectedItem="{Binding MasterFilterValue, Mode=TwoWay}" IsEnabled="{Binding MasterFilterItems, Converter={StaticResource HasValueTester}}" BackgroundColor="{StaticResource ProductsLevel1Colour}" VerticalOptions="End"/>

                        <Picker Title="{x:Static resx:Labels.DetailFilter}" ItemsSource="{Binding DetailFilterItems, Mode=TwoWay}" SelectedItem="{Binding DetailFilterValue, Mode=TwoWay}" IsEnabled="{Binding DetailFilterItems, Converter={StaticResource HasValueTester}}" BackgroundColor="{StaticResource ProductsLevel1Colour}" VerticalOptions="End"/>

                        <!--Note apparently UpdateSourceTrigger=PropertyChanged through this chain, which is good for immediate response for validation and enablement.-->
                        <!--Note that Placeholder is just that, for both Android and UWP.-->
                        <controls:ClearableEntry Placeholder="{x:Static resx:Labels.TextFilter}" Text="{Binding TextFilterValue, Mode=TwoWay}" BackgroundColor="{StaticResource ProductsLevel1Colour}" WidthRequest="130" VerticalOptions="End">
                             <controls:ClearableEntry.EntryBehaviors>
                                 <!--TODO Currently parameter passing does not work and is hard coded. See comments elsewhere.-->
                                 <!--<behaviors:EntryRegexValidationBehavior Expression="{Binding ValidTextFilterExpression}" InvalidBackgroundColour="{StaticResource InvalidBackgroundColour}"/>-->
                                <behaviors:EntryRegexValidationBehavior Expression=".{3}" InvalidBackgroundColour="{StaticResource InvalidBackgroundColour}"/>

                                <!--Could not get below working, including variations.-->
                                 <!--<community:TextValidationBehavior RegexPattern=".{3}" InvalidStyle="{StaticResource InvalidEntryStyle}"/>-->
                            </controls:ClearableEntry.EntryBehaviors>
                        </controls:ClearableEntry>
                    </StackLayout>

                    <!--Put at Start, as changes in orientation did not work out correctly on the last Label.-->
                    <StackLayout Orientation="Horizontal" HorizontalOptions="Start">
                        <!--IsDefault="True"-->
                        <Button Text="{x:Static resx:Labels.Filter}" Command="{Binding FilterCommand}" BackgroundColor="{StaticResource ProductsLevel1Colour}" HorizontalOptions="Start" VerticalOptions="End"/>

                        <Label Text="{Binding ItemsCount}" Style="{StaticResource ValueEmphasisMediumLabelStyle}" VerticalOptions="End"/>
                        <Label Text="{x:Static resx:Labels.Products}" Style="{StaticResource EmphasisMediumLabelStyle}" VerticalOptions="End"/>
                    </StackLayout>
                </StackLayout>
            </StackLayout>

            <ContentView Grid.Row="1" BackgroundColor="{StaticResource ResultsBackgroundColour}">
                <Grid>
                    <Label IsVisible="{Binding ItemsCount, Converter={StaticResource HasValueTester}, ConverterParameter='invert'}" Text="{Binding Message}" Style="{StaticResource MessageLabelStyle}" Margin="7"/>

                    <!--TODO It might be interesting to make all this Horizontal.-->
                    <!--Note that ListView has got its own scrolling.-->
                    <ListView IsVisible="{Binding ItemsCount, Converter={StaticResource HasValueTester}}" ItemsSource="{Binding Items}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <ViewCell>
                                    <!--
                                    Notes:
                                    ContentButton is needed because currently there is no Button.Content.
                                    For every Command, maybe because of the ContentButton:
                                    - DesignInstance does not work.
                                    - RelativeSource Mode=FindAncestorBindingContext does not work. Therefor still BindingContext.
                                    -->
                                    <controls:ContentButton Command="{Binding BindingContext.DetailsCommand, Source={RelativeSource AncestorType={x:Type views:ProductsView}}}" CommandParameter="{Binding}">
                                        <controls:ContentButton.Content>
                                            <Grid Style="{StaticResource ListItemStyle}" BackgroundColor="{StaticResource ProductsLevel1Colour}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>

                                                <!--Note putting these elements in separate cells helped to better align them vertically.-->
                                                <!--TODO Get them better right aligned.-->

                                                <Image Grid.Column="0" Grid.Row="0" Source="{Binding ThumbNailPhoto, Converter={StaticResource ByteArrayToImageSourceConverter}}" VerticalOptions="Start" HorizontalOptions="End" HeightRequest="75" WidthRequest="100"/>

                                                <Button Grid.Column="0" Grid.Row="1" ImageSource="CartPlus.png" Command="{Binding BindingContext.CartCommand, Source={RelativeSource AncestorType={x:Type views:ProductsView}}}" CommandParameter="{Binding}" Style="{StaticResource CartPlusButtonStyle}" VerticalOptions="End" HorizontalOptions="End"/>

                                                <StackLayout Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"  VerticalOptions="Start">
                                                    <StackLayout Orientation="Horizontal">
                                                        <Label Text="{Binding ProductCategory}" Style="{StaticResource ValueLabelStyle}"/>
                                                        <Label Text="/" Style="{StaticResource ValueLabelStyle}"/>
                                                        <Label Text="{Binding ProductSubcategory}" Style="{StaticResource ValueLabelStyle}"/>
                                                    </StackLayout>

                                                    <Label Text="{Binding Name}" Style="{StaticResource ValueEmphasisMediumLabelStyle}"/>

                                                    <!--HACK All similar occurrences of StringFormat are (temporarily) in this format because of this bug https://github.com/xamarin/Xamarin.Forms/issues/5282 -->
                                                    <Label Text="{Binding ListPrice, StringFormat='{}{0:C2}'}" Style="{StaticResource ValueEmphasisLabelStyle}"/>

                                                    <StackLayout Orientation="Horizontal">
                                                        <Label Text="{Binding Size}" Style="{StaticResource ValueLabelStyle}"/>
                                                        <Label Text="{Binding SizeUnitMeasureCode}" Style="{StaticResource ValueLabelStyle}"/>
                                                    </StackLayout>

                                                    <Label Text="{Binding Color}" Style="{StaticResource ValueLabelStyle}"/>
                                                </StackLayout>
                                            </Grid>
                                        </controls:ContentButton.Content>
                                    </controls:ContentButton>
                                </ViewCell>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </ContentView>
        </Grid>

        <ActivityIndicator Color="Black" IsVisible="{Binding Awaiting}" IsRunning="{Binding Awaiting}" HorizontalOptions="Center" VerticalOptions="Center"/>
    </Grid>
</baseClasses:View>
