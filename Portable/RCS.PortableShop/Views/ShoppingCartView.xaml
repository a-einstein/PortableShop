<?xml version="1.0" encoding="UTF-8"?>

<BaseClasses:ImplicitModelView
    x:Class="RCS.PortableShop.Views.ShoppingCartView"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:NumericUpDown="clr-namespace:Syncfusion.SfNumericUpDown.XForms;assembly=Syncfusion.SfNumericUpDown.XForms"
    xmlns:BaseClasses="clr-namespace:RCS.PortableShop.Common.Views;assembly=RCS.PortableShop.Common"
    xmlns:Views="clr-namespace:RCS.PortableShop.Views;assembly=RCS.PortableShop"
    xmlns:ViewModels="clr-namespace:RCS.PortableShop.ViewModels;assembly=RCS.PortableShop"
    xmlns:Converters="clr-namespace:RCS.PortableShop.Common.Converters;assembly=RCS.PortableShop.Common"
    xmlns:Localization="clr-namespace:RCS.PortableShop.Localization;assembly=RCS.PortableShop"
    BaseClasses:View.ViewModel="{x:Static ViewModels:ShoppingCartViewModel.Instance}"
    >

    <BaseClasses:View.Resources>
        <ResourceDictionary>
            <!--<Converters:SizeFormatter x:Key="SizeFormatter"/>-->
        </ResourceDictionary>
    </BaseClasses:View.Resources>

    <StackLayout BackgroundColor="Yellow" Padding="5">

        <Views:ShoppingCartSummaryView/>
        
        <ScrollView VerticalOptions="Fill">

            <!--Note that setting HasUnevenRows seems the only way to let rows (somewhat) adapt to contents, instead of having to set some fixed RowHeight.-->
            <ListView x:Name="shoppingCartItemsListView" ItemsSource="{Binding Items}" HasUnevenRows="True" BackgroundColor="White">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell>
                            <!--Note this layout currently is aimed towards portrait orientation.-->
                            <StackLayout Orientation="Vertical" Padding="5,0">
                                <Label Text="{Binding Name}" VerticalOptions="Center" FontAttributes="Bold"/>

                                <StackLayout Orientation="Horizontal">
                                    <Label Text="{Binding ProductSize}" VerticalOptions="Center"/>
                                    <Label Text="{Binding ProductSizeUnitMeasureCode}" VerticalOptions="Center"/>
                                    <Label Text="{Binding ProductColor}" VerticalOptions="Center"/>
                                    <Label Text="{Binding ProductListPrice, StringFormat=\{0:C2\}}" VerticalOptions="Center"/>
                                    <Label Text="{Binding Value, StringFormat=\{0:C2\}}" FontAttributes="Bold" VerticalOptions="Center"/>
                                 </StackLayout>

                                <StackLayout Orientation="Horizontal">
                                    <!--Note this need HorizontalOptions to prevent taking all width. It is very hard to reduce its monstrous size, because of its Buttons to start with. WidthRequest needs to be considerable large to preserve the text area. HeightRequest only crops it.-->
                                    <!--Note the (differently named) FontAttribute does not work. Fontsize is numeric instead of an enum.-->
                                    <NumericUpDown:SfNumericUpDown Value="{Binding Quantity, Mode=TwoWay}" VerticalOptions="Center" HorizontalOptions="Start" WidthRequest="130" FontSize="15" FontAttribute="Bold" TextColor="Black"/>
                                   
                                    <!--Note that HeightRequest usually only fucks the Button up, while FontSize does not do anything. -->
                                    <Button Text="{Localization:Translate Remove}" Command="{Binding BindingContext.DeleteCommand, Source={x:Reference shoppingCartItemsListView}}" CommandParameter="{Binding}" BackgroundColor="Orange" VerticalOptions="Center" HorizontalOptions="Start" WidthRequest="30"/>
                                </StackLayout>
                            </StackLayout>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </ScrollView>
    </StackLayout>
</BaseClasses:ImplicitModelView>
