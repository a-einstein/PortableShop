<?xml version="1.0" encoding="UTF-8"?>

<baseClasses:View
    x:Class="RCS.PortableShop.Views.CartView"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:baseClasses="clr-namespace:RCS.PortableShop.Common.Views;assembly=RCS.PortableShop.Common"
    xmlns:views="clr-namespace:RCS.PortableShop.Views;assembly=RCS.PortableShop"
    xmlns:viewModels="clr-namespace:RCS.PortableShop.ViewModels"
    d:BindingContext="{d:DesignInstance Type=viewModels:CartViewModel}"
    mc:Ignorable="d"
    BackgroundColor="{StaticResource CartLevel0Colour}"
    Padding="{StaticResource ViewPadding}"
    >

    <baseClasses:View.Resources>
        <ResourceDictionary>
            <!--<Converters:SizeFormatter x:Key="SizeFormatter"/>-->
        </ResourceDictionary>
    </baseClasses:View.Resources>

    <StackLayout>
        <views:CartSummaryView/>

        <!--VerticalOptions is needed to fill the screen with no or just a few items.-->
        <!--Note that ListView has got its own scrolling.-->
        <ListView x:Name="cartItemsListView" ItemsSource="{Binding Items}" VerticalOptions="FillAndExpand" BackgroundColor="{StaticResource ResultsBackgroundColour}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <ViewCell>
                        <Grid Style="{StaticResource ListItemStyle}" BackgroundColor="{StaticResource CartLevel1Colour}">
                            <!--Note this layout currently is aimed towards portrait orientation.-->
                            <StackLayout Orientation="Vertical">
                                <Label Text="{Binding Name}" Style="{StaticResource ValueEmphasisMediumLabelStyle}"/>

                                <StackLayout Orientation="Horizontal">
                                    <Label Text="{Binding ProductSize}" Style="{StaticResource ValueLabelStyle}"/>
                                    <Label Text="{Binding ProductSizeUnitMeasureCode}" Style="{StaticResource ValueLabelStyle}"/>
                                    <Label Text="{Binding ProductColor}" Style="{StaticResource ValueLabelStyle}"/>
                                    <Label Text="{Binding ProductListPrice, StringFormat='{}{0:C2}'}" Style="{StaticResource ValueLabelStyle}"/>
                                    <Label Text="{Binding Value, StringFormat='{}{0:C2}'}" Style="{StaticResource ValueEmphasisLabelStyle}"/>
                                </StackLayout>

                                <StackLayout Orientation="Horizontal">
                                    <!--TODO May become a separate control with style.-->
                                    
                                    <!--Note No longer bound to Stepper.Value, which supplied restrictions, but did not properly coerce textual incorrectness..-->
                                    <!--TODO Does not properly resize on Android for the the number of digits. Only when adding a new row. MinimumWidthRequest does not help-->
                                    <Entry Text="{Binding Quantity, Mode=TwoWay}" Style="{StaticResource ValueEmphasisEntryStyle}"/>

                                    <!--TODO Buttons are very large on Android. Maybe some additional styling. Alternatively go back to SfNumericUpDown .-->
                                    <Stepper x:Name="quantityStepper" Value="{Binding Quantity, Mode=TwoWay}" Minimum="0" Maximum="{Binding MaxQuantity}" Increment="1" BackgroundColor="White"/>

                                    <Button ImageSource="Trash.png" Command="{Binding BindingContext.DeleteCommand, Source={x:Reference cartItemsListView}}" CommandParameter="{Binding}" Style="{StaticResource CartMinButtonStyle}" VerticalOptions="Start" HorizontalOptions="Start"/>
                                </StackLayout>
                            </StackLayout>
                        </Grid>
                    </ViewCell>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </StackLayout>
</baseClasses:View>
